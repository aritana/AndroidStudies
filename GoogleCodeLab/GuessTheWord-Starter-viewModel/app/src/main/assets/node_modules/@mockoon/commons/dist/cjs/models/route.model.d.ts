export declare type LogicalOperators = 'AND' | 'OR';
export declare type RouteResponse = {
    uuid: string;
    rules: ResponseRule[];
    rulesOperator: LogicalOperators;
    statusCode: number;
    label: string;
    headers: Header[];
    body?: string;
    latency: number;
    filePath: string;
    sendFileAsBody: boolean;
    disableTemplating: boolean;
    fallbackTo404: boolean;
};
export declare type ResponseRuleOperators = 'equals' | 'regex' | 'null' | 'empty_array';
export declare type ResponseRule = {
    target: ResponseRuleTargets;
    modifier: string;
    value: string;
    operator: ResponseRuleOperators;
};
export declare type ResponseRuleTargets = 'body' | 'query' | 'header' | 'params' | 'request_number' | 'cookie';
export declare type Route = {
    uuid: string;
    documentation: string;
    method: keyof typeof Methods;
    endpoint: string;
    responses: RouteResponse[];
    enabled: boolean;
    randomResponse: boolean;
    sequentialResponse: boolean;
};
export declare type Header = {
    key: string;
    value: string;
};
export declare enum Methods {
    get = "get",
    post = "post",
    put = "put",
    patch = "patch",
    delete = "delete",
    head = "head",
    options = "options"
}
