import { Transaction } from '@mockoon/commons';
import { Request, Response } from 'express';
import { SafeString } from 'handlebars';
/**
 * Check if an Object or Array is empty
 *
 * @param obj
 */
export declare const IsEmpty: (obj: any) => boolean;
/**
 * Return a random integer
 *
 * @param a
 * @param b
 */
export declare const RandomInt: (a?: number, b?: number) => number;
/**
 * Decompress body based on content-encoding
 *
 * @param response
 */
export declare const DecompressBody: (response: Response) => any;
/**
 * Create a Transaction object from express req/res.
 * To be used after the response closes
 *
 * @param request
 * @param response
 */
export declare function CreateTransaction(request: Request, response: Response): Transaction;
/**
 * Convert a string to base64
 *
 * @param text
 */
export declare const ToBase64: (text: string) => string;
/**
 * Convert a SafeString to a string if needed.
 *
 * @param text
 * @returns
 */
export declare const fromSafeString: (text: string | SafeString) => string;
/**
 * Parse a number from a SafeString if needed.
 *
 * @param text
 * @returns
 */
export declare const numberFromSafeString: (text: string | SafeString) => number;
/**
 * Resolve a file path relatively to the current environment folder if provided
 */
export declare const resolvePathFromEnvironment: (filePath: string, environmentDirectory?: string | undefined) => string;
